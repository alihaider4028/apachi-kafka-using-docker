version: "3"


services:

  mysqldb:
    image: mysql
    environment:
     MYSQL_ROOT_PASSWORD: root
    networks:
      springboot-mysql-net:

  springboot-producer-service:
    container_name: springboot-producer-service
    build:
      context: ./
      dockerfile: Dockerfile-producer
    ports:
      - "8080:8080"
    depends_on:
      - mysqldb
    networks:
       app-tier:
       springboot-mysql-net:
    restart: on-failure
  springboot-consumer-service:
      container_name: springboot-consumer-service
      build:
        context: ./
        dockerfile: Dockerfile-consumer
      ports:
        - "8081:8081"
      depends_on:
        - mysqldb
      networks:
        app-tier:
        springboot-mysql-net:
      restart: on-failure
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    networks:
      - app-tier
  kafka:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    networks:
     - app-tier
networks:
  springboot-mysql-net:
  app-tier:
    driver: bridge
